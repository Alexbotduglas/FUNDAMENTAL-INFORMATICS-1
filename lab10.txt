#include <stdio.h>

int main(){

  int  a,n;

  a = 8;

  scanf("%d",&n);

  while (n >= 0){

     printf("%d\n",a/n);//Ошибка времени выполнения, деление на 0

     n--;
  }

  return 0;
}


178059@client18:~$ emacs lab10.c

178059@client18:~$ gcc -g lab10.c

178059@client18:~$ ./a.out

3
2
4
8

Исключение в операции с плавающей точкой (стек памяти сброшен на диск)


178059@client18:~$ gdb a.out

GNU gdb (Ubuntu 7.12.50.20170314-0ubuntu1.1) 
7.12.50.20170314-git
Copyright (C) 
2017 Free Software Foundation, Inc.
License GPLv3+: 
GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>

This is free software: you are free to change and redistribute it.

There is NO WARRANTY, to the extent permitted by law. Type "show copying"
and "show warranty" for details.

This GDB was configured as "i686-linux-gnu". Type "show configuration" for configuration details.

For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.

Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...

Reading symbols from a.out...done.

(gdb) help

List of classes of commands:

aliases
 -- Aliases of other commands
breakpoints
 -- Making program stop at certain points
data
 -- Examining data
files
 -- Specifying and examining files
internals
 -- Maintenance commands
obscure
 -- Obscure features
running
 -- Running the program
stack
 -- Examining the stack
status
 -- Status inquiries
support
 -- Support facilities
tracepoints
 -- Tracing of program execution without stopping the program
user-defined
 -- User-defined commands

Type "help" followed by a class name for a list of commands in that class.

Type "help all" for the list of all commands.
Type "help" followed by command name for full documentation.

Type "apropos word" to search for commands related to "word".
Command name abbreviations are allowed if unambiguous.


(gdb) run 
Starting program: /stud/178059/a.out
 
3
2
4
8


Program received signal SIGFPE, Arithmetic exception.
0x080484fb in main () at lab10.c:8
8
	     printf("%d\n",a/n);//Ошибка времени выполнения, деление на 0

(gdb) bt
#0  0x080484fb in main () at lab10.c:8


(gdb) list

3	int main(){

4	  int  a,n;

5	  a = 8;

6	  scanf("%d",&n);

7	  while (n >= 0){

8	     printf("%d\n",a/n);//Ошибка времени выполнения, деление на 0

9	     n--;

10	  }

11	  return 0;

12	}


(gdb) break 8

Breakpoint 1 at 0x80484f2: file lab10.c, line 8.

(gdb) run

Starting program: /stud/178059/a.out 3


Breakpoint 1, main () at lab10.c:8

8	     printf("%d\n",a/n); /Ошибка времени выполнения, деление на 0


(gdb) ptype n

type = int

(gdb) ptype a

type = int

(gdb) print n

$1 = 3

(gdb) next
2

9	     n--;

(gdb) step

7	  while (n >= 0){

(gdb) print n

$1 = 2

(gdb) step


Breakpoint 1, main () at lab10.c:8

8	     printf("%d\n",a/n);//Ошибка времени выполнения, деление на 0

(gdb) next

4

9	     n--;

(gdb) step

7	  while (n >= 0){

(gdb) print n

$2 = 1

(gdb) step


Breakpoint 1, main () at lab10.c:8

8	     printf("%d\n",a/n);//Ошибка времени выполнения, деление на 0

(gdb) next

8

9	     n--;

(gdb) next

7	  while (n >= 0){

(gdb) print n

$1 = 0

(gdb) next

Breakpoint 1, main () at lab10.c:8

8	     printf("%d\n",a/n);//Ошибка времени выполнения, деление на 0

(gdb) set var n = -1

(gdb) next

-8

9	     n--;

(gdb) continue

Continuing.
[Inferior 1 (process 2354) exited normally]

(gdb) bt

No stack.

(gdb) quit
